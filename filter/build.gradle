plugins {
    //  to have maven-like provided
    id 'nebula.provided-base' version '3.0.3'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

archivesBaseName = "dynks"

test.dependsOn(":integration-tests:setupIntegrationTesting")
test.finalizedBy(":integration-tests:tearDownIntegrationTesting")

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

dependencies {

    compile 'net.jcip:jcip-annotations:1.0'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'redis.clients:jedis:2.7.3'
    compile 'com.typesafe:config:1.3.0'

    testCompile 'org.apache.httpcomponents:httpclient:4.5.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'org.powermock:powermock-module-junit4:1.6.3'
    testCompile 'org.powermock:powermock-api-mockito:1.6.3'

    //  we do not want to distribute that with release version of library
    testRuntime 'org.slf4j:slf4j-simple:1.7.12'

    //  thanks to nebula plugins we got provided scope in gradle
    provided 'javax.servlet:javax.servlet-api:3.1.0'

}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Dynks web cache'
                artifactId 'dynks'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Web cache library for Java Servlet Container using Redis storage'
                url 'https://github.com/jszczepankiewicz/dynks'

                scm {
                    connection 'scm:git:ssh://git@github.com/jszczepankiewicz/dynks.git'
                    developerConnection 'scm:git:ssh://git@github.com/jszczepankiewicz/dynks.git'
                    url 'https://github.com/jszczepankiewicz/dynks'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://github.com/jszczepankiewicz/dynks/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'jszczepankiewicz'
                        name 'Jaroslaw Szczepankiewicz'
                    }
                }
            }
        }
    }
}
